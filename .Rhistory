b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(stroke = FALSE, fillOpacity = 1,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))
b
m <- bscols(a,b,c)
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(stroke = FALSE, fillOpacity = 0.6,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))
b
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = 3, stroke = FALSE, fillOpacity = 0.6,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))
b
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = 5, stroke = FALSE, fillOpacity = 0.6,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))
b
pal <- colorFactor(c("forestgreen" "darkblue", "#B31B1B"), domain = c("Category C: Support for Stein Sites", "Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research"))
pal <- colorFactor(c("forestgreen", "darkblue", "#B31B1B"), domain = c("Category C: Support for Stein Sites", "Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research"))
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = 5, stroke = FALSE, fillOpacity = 0.6,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))
b
m
m <- bscols(a,b,c)
m
m <- bscols(a,0,0,b,0,0,c,0,0)
m
m <- bscols(a,NA,NA,b,NA,NA,c,NA,NA)
m
m <- bscols(a,b,c)
aa <- filter_select("Year of Award", "Year of Award", Stein_Table_sd, ~factor(`Year of Award(Start)`))
?filter_select
aa <- filter_select("Year of Award", "Year of Award", Stein_Table_sd, column = ~factor(`Year of Award(Start)`))
aa <- filter_select("Year of Award", "Year of Award", Stein_Table_sd, column = ~`Year of Award(Start)`)
colnames(Stein_Table_dataframe)[colnames(data)=="Year of Award(Start)"] <- "Year"
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe)
aa <- filter_slider("Year of Award", "Year of Award", Stein_Table_sd, column = ~factor(Year))
save.image("C:/Users/shami/Desktop/Clarence Stein Institute/Website/Stein Final Website/Final Website/.RData")
View(Stein_Table_dataframe)
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Year of Award(Start)"] <- "Year"
View(Stein_Table_dataframe)
View(Stein_Table_dataframe)
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Year of Award (Start)"] <- "Year"
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe)
aa <- filter_slider("Year of Award", "Year of Award", Stein_Table_sd, column = ~factor(Year))
aa <- filter_select("Year of Award", "Year of Award", Stein_Table_sd, column = ~factor(Year))
aa <- filter_select("Year", "Year of Award", Stein_Table_sd, column = ~factor(Year))
aa <- filter_select("Year", "Year of Award", Stein_Table_sd, ~factor(Year))
aa
m <- bscols(aa,a,b,c)
m
aa <- filter_select("Year", "Year of Award", Stein_Table_sd, ~factor(Year), multiple = TRUE)
Stein_Table_dataframe$Year <- as.numeric(Stein_Table_dataframe$Year)
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe)
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~Year, step = 1, width = 300)
aaa
require(lubridate)
Stein_Table_dataframe$Year <- as.Date(as.character(Stein_Table_dataframe$Year), format = "%Y")
Stein_Table_dataframe$Year <- year(Stein_Table_dataframe$Year)
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~Year, step = 1, width = 300)
aaa
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe)
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~Year, step = 1, width = 300)
aaa
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~factor(Year), step = 1, width = 300)
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~character(Year), step = 1, width = 300)
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~numeric(Year), step = 1, width = 300)
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~factor(Year), step = 1, width = 300)
a
b
pal <- colorFactor(c("#B31B1B" "darkblue", "forestgreen"), domain = c("Category C: Support for Stein Sites", "Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research"))
pal <- colorFactor(c("#B31B1B","darkblue", "forestgreen"), domain = c("Category C: Support for Stein Sites", "Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research"))
require(leaflet)
require(crosstalk)
m <- bscols(a,b,c,widths = c(8,4,NA))
m <- bscols(a,b,c,widths = c(8,NA))
m <- bscols(a,b,c,widths = c(8,4))
m <- bscols(a,b,c,widths = c(12))
m <- bscols(a,b,c,widths = c(12,NA,NA))
m <- bscols(a,b,c,widths = c(4,4,NA))
m
m <- bscols(a,b,c,widths = c(12,NA,NA))
m <- bscols(a,b,c,widths = c(2,4,6))
m
m <- bscols(a,b,c,widths = c(2,10,NA))
m <- bscols(a,b,c,widths = c(2,10))
aaa
aa
m <- bscols(a,aa,b,c,widths = c(6,6))
m <- bscols(a,aa,b,c,widths = c(3,NA))
m
m <- bscols(widths = c(4,4), list(a,aa),b,c)
m
m <- bscols(widths = c(4,4,NA), list(a,aa),b,c)
m
aaa
m <- bscols(widths = c(6,NA), list(a,aaa),b,c)
m <- bscols(widths = c(4), list(a,aaa),b,c)
m
aaa <- filter_slider("year", "Year of Award", Stein_Table_sd, ~Year, step = 1, width = 300)
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = 5, stroke = FALSE, fillOpacity = 0.6,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = Stein_Table_dataframe$Category, opacity = 1)
b
pal <- colorFactor(c("#006699","#B31B1B", "#6EB43F"), domain = c("Category C: Support for Stein Sites", "Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research"))
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = 5, stroke = FALSE, fillOpacity = 0.6,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = Stein_Table_dataframe$Category, opacity = 1)
b
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = ~ifelse(Category == "Category C: Support for Stein Sites",6,4), stroke = FALSE, fillOpacity = 0.6,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = Stein_Table_dataframe$Category, opacity = 1)
b
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = ~ifelse(Category == "Category C: Support for Stein Sites",8,6), stroke = FALSE, fillOpacity = ~ifelse(Category == "Category C: Support for Stein Sites",1,0.7),color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = Stein_Table_dataframe$Category, opacity = 1)
b
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(updateWhenZooming = FALSE, updateWhenIdle = TRUE)) %>%
addCircleMarkers(radius = ~ifelse(Category == "Category C: Support for Stein Sites",12,6), stroke = FALSE, fillOpacity = ~ifelse(Category == "Category C: Support for Stein Sites",1,0.7),color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = Stein_Table_dataframe$Category, opacity = 1)
b
b
m <- bscols(widths = c(4,4), list(a,aa),b,c)
m
m <- bscols(a,aa,b,c)
m
m <- bscols(a,b)
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = ~ifelse(Category == "Category C: Support for Stein Sites",12,6), stroke = FALSE, fillOpacity = ~ifelse(Category == "Category C: Support for Stein Sites",1,0.7),color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()
b
m <- bscols(a,b)
m
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 12, stroke = FALSE, fillOpacity = ~ifelse(Category == "Category C: Support for Stein Sites",1,0.7),color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()
m <- bscols(a,b)
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()
m <- bscols(a,b)
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()
a <- filter_checkbox("category", "Category of Research", Stein_Table_sd, ~Category)
m <- bscols(a,b,c)
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend()
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = c("Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research", "Category C: Support for Stein Sites", opacity = 1))
b
m <- bscols(a,b,c)
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = c("Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research", "Category C: Support for Stein Sites"), opacity = 1))%>%addScaleBar()
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = c("Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research", "Category C: Support for Stein Sites"), opacity = 1)%>%addScaleBar()
m <- bscols(a,b,c)
m
b <- leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = c("Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research", "Category C: Support for Stein Sites"), opacity = 1)%>%addScaleBar()
install.packages("flexdashboard")
library(flexdashboard)
library(leaflet)
library(crosstalk)
library(mapview)
a
class(Stein_Table_dataframe$Year)
Stein_Table_dataframe$Year <- as.factor(Stein_Table_dataframe$Year)
View(Stein_Table_dataframe)
save.image("C:/Users/shami/Desktop/Clarence Stein Institute/Website/Stein Final Website/Final Website/testing.RData")
?crosstalk
??crosstalk
?origdata
library(flexdashboard)
library(leaflet)
library(crosstalk)
library(mapview)
library(tidyverse)
load("testing.RData")
Stein_Table_dataframe <- as.data.frame(Stein_Table)
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe)
filter_checkbox("category", "Category of Research", Stein_Table_sd$data(FALSE,FALSE,TRUE), ~Category)
filter_checkbox("category", "Category of Research", Stein_Table_sd, ~Category)
filter_checkbox("category", "Category of Research", Stein_Table_sd, Stein_Table_sd$data(~Category))
m <- Stein_Table_sd$origData()
m <- Stein_Table_sd$origData(as.data.frame)
remove(m)
View(Stein_Table_sd)
Stein_Table_sd[["data"]]
Stein_Table_sd$origData(~Category)
filter_slider("year", "Year of Award", Stein_Table_sd, ~Year, step = 1)
library(leaflet)
pal <- colorFactor(c("#006699","#B31B1B", "#6EB43F"), domain = c("Category C: Support for Stein Sites", "Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research"))
leaflet(data = Stein_Table_sd, options = leafletOptions(preferCanvas = TRUE)) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions()) %>%
addCircleMarkers(radius = 8, stroke = FALSE, fillOpacity = 0.7,color = ~pal(Stein_Table_dataframe$Category), popup = ~paste(
"Sr.no:", Stein_Table_dataframe$`Sr no.`, "<br>",
"Category:", Stein_Table_dataframe$Category, "<br>",
"Year of Award:", Stein_Table_dataframe$`Year of Award (Start)`, "<br>",
"Name of Awardee:", Stein_Table_dataframe$`Name of Awardee`, "<br>",
"Project:", Stein_Table_dataframe$Project, "<br>",
"Location of Project:", Stein_Table_dataframe$`Location of Project`, "<br>",
"Access(Link):", Stein_Table_dataframe$Access_2, "<br>",
"Call Number(If Copy Available in the Library):", Stein_Table_dataframe$`Call Number (If Copy Available in the Library)`,"<br>"))%>%addMiniMap()%>%addLegend(pal = pal, values = c("Category A: Support for Senior Scholarly Research", "Category B: Support for Student Research", "Category C: Support for Stein Sites"), opacity = 1)%>%addScaleBar()
filter_slider("year", "Year of Award", Stein_Table_sd, ~Year, step = 1)
View(Stein_Table)
View(Stein_Table)
View(Stein_Table_dataframe)
save.image("C:/Users/shami/Desktop/Clarence Stein Institute/Website/Stein Final Website/Final Website/.RData")
library(flexdashboard)
library(leaflet)
library(crosstalk)
library(mapview)
library(tidyverse)
load("testing.RData")
Stein_Table_dataframe <- as.data.frame(Stein_Table)
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Year of Award (Start)"] <- "Year"
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Category of Project"] <- "Category"
Stein_Table_dataframe$Year <- as.numeric(Stein_Table_dataframe$Year)
Stein_Table_dataframe$Access_2 <- paste0("<a href='",Stein_Table_dataframe$`Access (Link)`,"'>",Stein_Table_dataframe$`Access (Link)`,"</a>")
Stein_Table_dataframe[Stein_Table_dataframe$Access_2 == "<a href='N/A'>N/A</a>", "Access_2"] <- "N/A"
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe)
Stein_Table_datatable <- Stein_Table_dataframe[,c(2,4,5,6,7,8,9,10,11)]
View(Stein_Table_datatable)
Stein_Table_datatable <- Stein_Table_dataframe[,c(2,4,5,6,7,8,9,10,11,12)]
Stein_Table_datatable <- Stein_Table_dataframe[,c(2,4,5,6,7,8,9,10,11,12,13)]
View(Stein_Table_dataframe)
View(Stein_Table_datatable)
class(Stein_Table_datatable$Year)
Stein_Table_datatable$date <- as.factor(Stien_Table_datatable$Year)
Stein_Table_datatable$date <- as.factor(Steinn_Table_datatable$Year)
Stein_Table_datatable$date <- as.factor(Stein_Table_datatable$Year)
Stein_Table_datatable$date <- as.Date(Stein_Table_datatable$date, format = "%Y")
View(Stein_Table_datatable)
format(Stein_Table_datatable$date)
require(lubridate)
Stein_Table_datatable$date <- year(Stein_Table_datatable$date)
View(Stein_Table_datatable)
write.csv(Stein_Table_datatable, "tomerge.csv")
Stein_Table_datatable[1,7]
?DT::renderDataTable
Stein_Table_datatable2 <- Stein_Table_datatable
Stein_Table_datatable2[2,c(1:6)]
Stein_Table_datatable2[2,c(1:6)]=="--do--"
Stein_Table_datatable2[2,1]=="--do--"
Stein_Table_datatable2[2,c(1:6)] <- "--do--"
View(Stein_Table_datatable2)
Stein_Table_datatable2[2,c(8:12)] <- "--do--"
Stein_Table_datatable2[3,c(1:6)] <- "--do--"
Stein_Table_datatable2[3,c(8:12)] <- "--do--"
Stein_Table_datatable2[8,c(8:12)] <- "--do--"
Stein_Table_datatable2[8,c(1:6)] <- "--do--"
Stein_Table_datatable2[c(25,53,56,58,71,85,104,115,128),c(1:6)] <- "--do--"
Stein_Table_datatable2[c(25,53,56,58,71,85,104,115,128),c(8:12)] <- "--do--"
Stein_Table_datatable2[c(36,37,39,40,65),c(1:6)] <- "--do--"
Stein_Table_datatable2[c(36,37,39,40,65),c(8:12)] <- "--do--"
Stein_Table_datatable2[c(48,49,50,80,81,82,107,108,109),c(1:6)] <- "--do--"
Stein_Table_datatable2[c(48,49,50,80,81,82,107,108,109),c(8:12)] <- "--do--"
Stein_Table_datatable2[c(135:139),c(1:6)] <- "--do--"
Stein_Table_datatable2[c(135:139),c(8:12)] <- "--do--"
View(Stein_Table_datatable)
View(Stein_Table_datatable2)
library(flexdashboard)
library(leaflet)
library(crosstalk)
library(mapview)
library(tidyverse)
library(lubridate)
load("testing.RData")
Stein_Table_dataframe <- as.data.frame(Stein_Table)
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Year of Award (Start)"] <- "Year"
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Category of Project"] <- "Category"
Stein_Table_dataframe$Year <- as.numeric(Stein_Table_dataframe$Year)
Stein_Table_dataframe$Access_2 <- paste0("<a href='",Stein_Table_dataframe$`Access (Link)`,"'>",Stein_Table_dataframe$`Access (Link)`,"</a>")
Stein_Table_dataframe[Stein_Table_dataframe$Access_2 == "<a href='N/A'>N/A</a>", "Access_2"] <- "N/A"
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe, group = "Stein1")
Stein_Table_datatable <- Stein_Table_dataframe[,c(2,4,5,6,7,8,9,16,11,13)]
colnames(Stein_Table_datatable)[colnames(Stein_Table_datatable)=="Access_2"] <- "Access"
Stein_Table_datatable$date <- as.factor(Stein_Table_datatable$Year)
Stein_Table_datatable$date <- as.Date(Stein_Table_datatable$date, format = "%Y")
Stein_Table_datatable2 <- Stein_Table_datatable
Stein_Table_datatable2[2,c(2:6)] <- "--do--"
Stein_Table_datatable2[2,c(8:11)] <- "--do--"
View(Stein_Table_datatable2)
library(flexdashboard)
library(leaflet)
library(crosstalk)
library(mapview)
library(tidyverse)
library(lubridate)
load("testing.RData")
Stein_Table_dataframe <- as.data.frame(Stein_Table)
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Year of Award (Start)"] <- "Year"
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Category of Project"] <- "Category"
Stein_Table_dataframe$Year <- as.numeric(Stein_Table_dataframe$Year)
Stein_Table_dataframe$Access_2 <- paste0("<a href='",Stein_Table_dataframe$`Access (Link)`,"'>",Stein_Table_dataframe$`Access (Link)`,"</a>")
Stein_Table_dataframe[Stein_Table_dataframe$Access_2 == "<a href='N/A'>N/A</a>", "Access_2"] <- "N/A"
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe, group = "Stein1")
Stein_Table_datatable <- Stein_Table_dataframe[,c(2,4,5,6,7,8,9,16,11,13)]
colnames(Stein_Table_datatable)[colnames(Stein_Table_datatable)=="Access_2"] <- "Access"
Stein_Table_datatable$date <- as.factor(Stein_Table_datatable$Year)
Stein_Table_datatable$date <- as.Date(Stein_Table_datatable$date, format = "%Y")
Stein_Table_datatable2 <- Stein_Table_datatable
Stein_Table_datatable2[2,c(2:6)] <- "--do--"
Stein_Table_datatable2[2,c(8:10)] <- "--do--"
Stein_Table_datatable2[3,c(2:6)] <- "--do--"
Stein_Table_datatable2[3,c(8:10)] <- "--do--"
Stein_Table_datatable2[8,c(8:10)] <- "--do--"
Stein_Table_datatable2[8,c(2:6)] <- "--do--"
Stein_Table_datatable2[c(25,53,56,58,71,85,104,115,128),c(2:6)] <- "--do--"
Stein_Table_datatable2[c(25,53,56,58,71,85,104,115,128),c(8:10)] <- "--do--"
Stein_Table_datatable2[c(36,37,39,40,65),c(2:6)] <- "--do--"
Stein_Table_datatable2[c(36,37,39,40,65),c(8:11)] <- "--do--"
library(flexdashboard)
library(leaflet)
library(crosstalk)
library(mapview)
library(tidyverse)
library(lubridate)
load("testing.RData")
Stein_Table_dataframe <- as.data.frame(Stein_Table)
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Year of Award (Start)"] <- "Year"
colnames(Stein_Table_dataframe)[colnames(Stein_Table_dataframe)=="Category of Project"] <- "Category"
Stein_Table_dataframe$Year <- as.numeric(Stein_Table_dataframe$Year)
Stein_Table_dataframe$Access_2 <- paste0("<a href='",Stein_Table_dataframe$`Access (Link)`,"'>",Stein_Table_dataframe$`Access (Link)`,"</a>")
Stein_Table_dataframe[Stein_Table_dataframe$Access_2 == "<a href='N/A'>N/A</a>", "Access_2"] <- "N/A"
Stein_Table_sd <- SharedData$new(Stein_Table_dataframe, group = "Stein1")
Stein_Table_datatable <- Stein_Table_dataframe[,c(2,4,5,6,7,8,9,16,11,13)]
colnames(Stein_Table_datatable)[colnames(Stein_Table_datatable)=="Access_2"] <- "Access"
Stein_Table_datatable$date <- as.factor(Stein_Table_datatable$Year)
Stein_Table_datatable$date <- as.Date(Stein_Table_datatable$date, format = "%Y")
Stein_Table_datatable2 <- Stein_Table_datatable
Stein_Table_datatable2[2,c(2:6)] <- "--do--"
Stein_Table_datatable2[2,c(8:10)] <- "--do--"
Stein_Table_datatable2[3,c(2:6)] <- "--do--"
Stein_Table_datatable2[3,c(8:10)] <- "--do--"
Stein_Table_datatable2[8,c(8:10)] <- "--do--"
Stein_Table_datatable2[8,c(2:6)] <- "--do--"
Stein_Table_datatable2[c(25,53,56,58,71,85,104,115,128),c(2:6)] <- "--do--"
Stein_Table_datatable2[c(25,53,56,58,71,85,104,115,128),c(8:10)] <- "--do--"
Stein_Table_datatable2[c(36,37,39,40,65),c(2:6)] <- "--do--"
Stein_Table_datatable2[c(36,37,39,40,65),c(8:10)] <- "--do--"
Stein_Table_datatable2[c(48,49,50,80,81,82,107,108,109),c(2:6)] <- "--do--"
Stein_Table_datatable2[c(48,49,50,80,81,82,107,108,109),c(8:10)] <- "--do--"
Stein_Table_datatable2[c(135:139),c(2:6)] <- "--do--"
Stein_Table_datatable2[c(135:139),c(8:10)] <- "--do--"
Stein_Table_sd2 <- SharedData$new(Stein_Table_datatable2, group = "Stein1")
